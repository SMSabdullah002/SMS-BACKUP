@using kanban.Models.Catagory;
@using kanban.Models;
@using System.Net.Http
@using System.Net.Http.Json

@inject HttpClient HttpClient

<div class="card">
    <div class="card-header">
        <h3>Create Student Form</h3>
    </div>
    <div class="card-body">
        <EditForm Model="dash" OnValidSubmit="OnInitializedAsync">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-row">
                <div class="col">
                    <label for="FirstName">First Name</label>
                    <InputText class="form-control create-std  f_name " id="FName" @bind-Value="dash.FName" />
                </div>
                <div class="col">
                    <label for="MiddleName">Middle Name</label>
                    <InputText class="form-control create-std  m_name" id="MName" @bind-Value="dash.MName" />
                </div>
                <div class="col">
                    <label for="LastName">Last Name</label>
                    <InputText class="form-control create-std  l_name" id="LName" @bind-Value="dash.LName" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="BirthDate">Birth Date</label>
                    <InputText class="form-control create-std  dob" id="Dob" @bind-Value="dash.Dob" />
                </div>
                <div class="form-group col-md-6">
                    <label for="BloodGroup">Blood Group</label>
                    <InputText class="form-control create-std  bl_group" id="BlGroup" @bind-Value="dash.BlGroup">
                        @*@{
                            foreach (var value in Enum.GetValues(typeof(bloodgroup)))
                            {
                                <option value="@value">@value</option>
                            }
                        }*@
                    </InputText>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="Weight">Weight</label>
                    <InputNumber class="form-control create-std wt" id="Wt" @bind-Value="dash.Wt" />
                </div>
                <div class="form-group col-md-6">
                    <label for="inputEmail4">Height</label>
                    <InputNumber class="form-control create-std  ht" id="Ht" @bind-Value="dash.Ht" />
                </div>

            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="inputEmail4">Native Language</label>
                    <InputText class="form-control create-std  moth_lang" id="MothLang" @bind-Value="dash.MothLang" />
                </div>
                <div class="form-group col-md-6 ">
                    <label for="inputEmail4">Gender</label>
                    <InputText class="form-control create-std gender" id="Gender" @bind-Value="dash.Gender">
                        @* @{
                    foreach (var value in Enum.GetValues(typeof(gender)))
                    {
                        <option value="@value">@value</option>
                    }
                }*@
                    </InputText>
                </div>

            </div>
            <h2>Parent/Guardian</h2>
            <div class="form-group">
                <label for="exampleInputEmail1">Father Name</label>
                <InputText class="form-control create-std fat_name" id="FatName" @bind-Value="dash.FatName" />

            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">Father/Mother Occupation</label>
                <InputText class="form-control create-std fat_occup" id="OccupFat" @bind-Value="dash.OccupFat" />
            </div>
            <div class="form-group">
                <label for="exampleInputEmail1">Father/Mother Contact Number</label>
                <InputText class="form-control create-std fat_cont" id="FatContact" @bind-Value="dash.FatContact" />

            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">Father/Mother Email</label>
                <InputText class="form-control create-std fat_email" id="FatEmail" @bind-Value="dash.FatEmail" />
            </div>
            <h2>Residence</h2>
            <div class="form-group">
                <label for="exampleInputEmail1">Province</label>
                <InputText class="form-control create-std province" id="Province" @bind-Value="dash.Province" />

            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">City</label>
                <InputText class="form-control create-std city" id="City" @bind-Value="dash.City" />
            </div>
            <div class="form-group">
                <label for="exampleInputEmail1">Address(Current)</label>
                <InputText class="form-control create-std cur_address" id="CurrAdd" @bind-Value="dash.CurrAdd" />

            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">Permanent Address</label>
                <InputText class="form-control create-std per_address" id="PermAdd" @bind-Value="dash.PermAdd" />
            </div>
            <h2>Contact</h2>
            <div class="form-group">
                <label for="exampleInputEmail1">Student Username</label>
                <InputText class="form-control create-std std_username" id="StdUsername" @bind-Value="dash.StdUsername" />

            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">Student Email</label>
                <InputText class="form-control create-std std_email" id="StdEmail" @bind-Value="dash.StdEmail" />
            </div>
            <div class="form-group">
                <label for="exampleInputEmail1">Student Contact Number</label>
                <InputText class="form-control create-std std_cont" id="StdContact" @bind-Value="dash.StdContact" />

            </div>
            <div>
                <button type="submit" class="btn btn-primary" id="Save" value="Submit">Submit </button>
            </div>

        </EditForm>
        <div class="card-footer">
            <div id="response">

            </div>
        </div>
    </div>
</div>

@code {
    public Root dash = new Root();

    protected override async Task OnInitializedAsync()
    {
        
        {
            using var response = await HttpClient.PostAsJsonAsync("https://localhost:44315/api/v1/student/createStudent", dash);

            // convert response data to Article object
            dash = await response.Content.ReadFromJsonAsync<Root>();
        }
    }

}